# -*- coding: utf-8 -*-
"""Interpolasi.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dSpS4254nxfs3TvxfMI65u5n1onVzCtZ
"""

#Modul yang dapat dimuat antara lain: numpy, scipy, pylab (bila diperlukan plot data).
import numpy as np
import scipy.interpolate
import pylab
import pandas as pd

#Input data dapat ditanam di kode python, atau interaktif, atau baca dari file.

myfile = open("/content/sample_data/mycsv.csv", "r")
data = np.loadtxt(myfile,delimiter=";", skiprows=1) # skip baris pertama (ke-1) pada data
for j in range(len(data)):
  x = data[:, 0]
  y = data[:, 1]
myfile.close()

#Definisikan titik data yang akan di-interpolasi
#Gunakan finer and regular mesh
n = 10
xbaru = np.linspace(x[0], x[len(data) - 1], n*100) #membuat 1000 titik data baru dalam rentang data x

# interpolasi dengan fungsi konstan atau polinom pangkat nol (p=0)
y0 = scipy.interpolate.interp1d(x, y, kind = 'nearest')
y0(xbaru)

# interpolasi dengan fungsi linear (p=1)
y1 = scipy.interpolate.interp1d(x, y, kind = 'linear')
y1(xbaru)

#interpolasi dengan fungsi kuadratik (p=2)
y2 = scipy.interpolate.interp1d(x, y, kind = 'quadratic')
y2(xbaru)

#interpolasi dengan fungsi kubik (p=3)
y3 = scipy.interpolate.interp1d(x, y, kind = 'cubic')
y3(xbaru)

# Plot data dan hasil interpolasi (y0, y1, y2, dan y3)
pylab.plot(x, y, 'o', label = 'data point')
pylab.plot(xbaru, y0(xbaru), label = 'constant')
pylab.plot(xbaru, y1(xbaru), label = 'linear')
pylab.plot(xbaru, y2(xbaru), label = 'quadratic')
pylab.plot(xbaru, y3(xbaru), label = 'cubic')
pylab.legend()
pylab.xlabel('x')
pylab.ylabel('y')
#pylab.savefig(’interpolate.pdf’)
pylab.show()