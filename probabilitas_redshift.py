# -*- coding: utf-8 -*-
"""Probabilitas Redshift.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1r7Hf6-znDAddfTObYA_B6caXxtXdHPeJ
"""

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
# %matplotlib inline
import pandas as pd
import numpy as np
import matplotlib.mlab as mlab
from scipy import stats

z=np.arange(0.0100,10.0100,0.0100)
print(z)
len(z)

df = pd.read_excel("/content/bismatest.probs.xlsx")
df[3]

y= df
x= z

plt.title("probabilitas redshift")
plt.xlabel("z")
plt.ylabel("p_bayes(z)")

plt.plot(x, y[1], label = 'Galaxy1',color='red' )
plt.plot(x, y[2], label = 'Galaxy2',color='blue')
plt.plot(x, y[3], label = 'Galaxy3',color='green')
plt.plot(x, y[4], label = 'Galaxy4',color='yellow')
plt.plot(x, y[5], label = 'Galaxy5',color='orange')
plt.plot(x, y[6], label = 'Galaxy6',color='purple')
plt.plot(x, y[7], label = 'Galaxy7',color='pink')
plt.plot(x, y[8], label = 'Galaxy8',color='cyan')
plt.plot(x, y[9], label = 'Galaxy9',color='brown')
plt.plot(x, y[10], label = 'Galaxy10',color='black')
plt.plot(x, y[11], label = 'Galaxy11',color='crimson')
plt.plot(x, y[12], label = 'Galaxy12',color='grey')


plt.legend()
plt.figure(figsize=(20,12))

plt.title("probabilitas redshift")
plt.xlabel("z")
plt.ylabel("p_bayes(z)")

plt.plot(x, y[1], label = 'Galaxy1',color='red' )
plt.scatter(x,y[1])
plt.legend()
plt.figure(figsize=(20,12))

plt.title("probabilitas redshift")
plt.xlabel("z")
plt.ylabel("p_bayes(z)")

plt.plot(x, y[2], label = 'Galaxy2',color='blue' )
plt.scatter(x,y[2],color='red')
plt.legend()
plt.figure(figsize=(20,12))

plt.title("probabilitas redshift")
plt.xlabel("z")
plt.ylabel("p_bayes(z)")

plt.plot(x, y[3], label = 'Galaxy3',color='green' )
plt.scatter(x,y[3])
plt.legend()
plt.figure(figsize=(20,12))

plt.title("probabilitas redshift")
plt.xlabel("z")
plt.ylabel("p_bayes(z)")

plt.plot(x, y[4], label = 'Galaxy4',color='yellow')
plt.scatter(x,y[4])
plt.legend()
plt.figure(figsize=(20,12))

plt.title("probabilitas redshift")
plt.xlabel("z")
plt.ylabel("p_bayes(z)")

plt.plot(x, y[5], label = 'Galaxy5',color='orange')
plt.scatter(x,y[5])

plt.legend()
plt.figure(figsize=(20,12))

plt.title("probabilitas redshift")
plt.xlabel("z")
plt.ylabel("p_bayes(z)")

plt.plot(x, y[6], label = 'Galaxy6',color='purple')
plt.scatter(x,y[6])

plt.legend()
plt.figure(figsize=(20,12))

plt.title("probabilitas redshift")
plt.xlabel("z")
plt.ylabel("p_bayes(z)")

plt.plot(x, y[7], label = 'Galaxy7',color='pink')
plt.scatter(x,y[7])
plt.legend()
plt.figure(figsize=(20,12))

plt.title("probabilitas redshift")
plt.xlabel("z")
plt.ylabel("p_bayes(z)")


plt.plot(x, y[8], label = 'Galaxy8',color='cyan')
plt.scatter(x,y[8])

plt.legend()
plt.figure(figsize=(20,12))

plt.title("probabilitas redshift")
plt.xlabel("z")
plt.ylabel("p_bayes(z)")

plt.plot(x, y[9], label = 'Galaxy9',color='brown')
plt.scatter(x,y[9])

plt.legend()
plt.figure(figsize=(20,12))

plt.title("probabilitas redshift")
plt.xlabel("z")
plt.ylabel("p_bayes(z)")

plt.plot(x, y[10], label = 'Galaxy10',color='black')
plt.scatter(x,y[10])

plt.legend()
plt.figure(figsize=(20,12))

plt.title("probabilitas redshift")
plt.xlabel("z")
plt.ylabel("p_bayes(z)")

plt.plot(x, y[11], label = 'Galaxy11',color='crimson')
plt.scatter(x,y[11])

plt.legend()
plt.figure(figsize=(20,12))

plt.title("probabilitas redshift")
plt.xlabel("z")
plt.ylabel("p_bayes(z)")

plt.plot(x, y[12], label = 'Galaxy12',color='grey')
plt.scatter(x,y[12])
plt.legend()
plt.figure(figsize=(20,12))

haha = pd.read_excel("/content/Hasil Fitting.xlsx")
haha.head(12)

plt.title("Redshift Photometrik vs Redshift Spektroskopi ")
plt.xlabel("Redshift Spektroskopi")
plt.ylabel("Redshift Photometrik")
plt.scatter(haha['zspec'],haha['zb'])
plt.plot(haha['zspec'],haha['zb'],color='red')

plt.legend()
plt.figure(figsize=(20,12))

plotwarna = pd.read_excel("/content/Data Nomor 1 Lengkap.xlsx")

plt.title("g-r vs u-g ")
plt.xlabel("u-g")
plt.ylabel("g-r")
plt.scatter(plotwarna['u-g'],plotwarna['g-r'])
plt.grid()

plt.legend()
plt.figure(figsize=(20,12))

plotwarna['u-r']=plotwarna['u']-plotwarna['r']
plotwarna.head(12)

plt.title("g vs u-r ")
plt.xlabel("u-r")
plt.ylabel("g")
plt.scatter(plotwarna['u-r'],plotwarna['g'])
plt.grid()

plt.legend()
plt.figure(figsize=(20,12))

no2 = pd.read_csv("/content/Dataeksgal.csv")

no2['Zspekmin']=min(no2['Zspek'])
no2['Zspekmax']=max(no2['Zspek'])

no2.head()

bins = np.linspace(min(no2['Zspek']), max(no2['Zspek']),4)
print(bins)

import numpy as np
from scipy.optimize import curve_fit
import matplotlib.pyplot as plt

a = no2['Zspek']

# Creating histogram
fig, axis = plt.subplots(figsize =(10, 5))
axis.hist(a, bins = [0.17, 0.34, 0.51, 0.68, 0.81, 0.98], align='mid', edgecolor='black', linewidth=2)
plt.show()

import numpy as np
from scipy.stats import norm
import matplotlib.pyplot as plt

mean,std=norm.fit(a)

plt.hist(a, [0.17, 0.34, 0.51, 0.68, 0.81, 0.98], align='mid', edgecolor='black', linewidth=2, density=True)
xmin, xmax = plt.xlim(0.2,1.0)
x = np.linspace(0.2, 1.435, 1000)
y = norm.pdf(x, mean, std)
plt.plot(x, y, label =mean)
plt.legend()
plt.show()

BCG = 0.500766
mean =statistics.mean(a)
perbandingan = mean / BCG
print(perbandingan)

no2['velocity']=no2['Zspek']*30E+105
b = no2['velocity']
b.head(33)

bins1 = np.linspace(min(b), max(b),5)
print(bins1)

# Creating histogram
fig, axis = plt.subplots(figsize =(10, 5))
axis.hist(b, bins = 10, align='mid', edgecolor='black', linewidth=2, label = mean)

plt.xlim(1.3e+106,2.3e+106)
plt.show()

mean,std=norm.fit(b)
print(mean)
print(std)
dispersi = std/mean
print(dispersi)